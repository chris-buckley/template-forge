# Production Dockerfile optimized for Azure App Service
# ---- build stage ----
FROM python:3.13-slim AS builder

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    libc6-dev \
    && rm -rf /var/lib/apt/lists/*

# Install uv package manager
RUN pip install --no-cache-dir uv

WORKDIR /build

# Copy dependency files
COPY pyproject.toml uv.lock ./

# Install production dependencies only
RUN uv pip install --system --no-cache -r pyproject.toml

# Copy application code
COPY app ./app

# ---- security scan stage ----
FROM aquasec/trivy:latest AS scanner
COPY --from=builder /build /scan
RUN trivy fs --no-progress --security-checks vuln,config /scan

# ---- runtime stage ----
FROM python:3.13-slim

# Security: Run as non-root user from the start
RUN useradd -m -u 1000 -s /bin/bash appuser

# Add OCI labels
LABEL org.opencontainers.image.source="https://github.com/microsoft/md-decision-maker"
LABEL org.opencontainers.image.description="LLM Document Generation PoC Backend - Production"
LABEL org.opencontainers.image.version="0.1.0"
LABEL org.opencontainers.image.vendor="Microsoft"

# Install runtime dependencies and security updates
RUN apt-get update && apt-get upgrade -y && \
    apt-get install -y --no-install-recommends \
    curl \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Copy Python packages from builder
COPY --from=builder /usr/local/lib/python3.13 /usr/local/lib/python3.13

# Setup application directory
WORKDIR /app

# Copy application code with correct ownership
COPY --chown=appuser:appuser app ./app

# Security: Remove shell access for production
RUN rm /bin/sh && ln -s /bin/false /bin/sh

# Switch to non-root user
USER appuser

# Production environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONHASHSEED=random \
    PYTHONPATH=/app \
    # Force production defaults
    APP_ENV=production \
    LOG_LEVEL=INFO \
    # Disable docs in production
    ENABLE_DOCS=false \
    # Azure App Service port
    PORT=8000

# Expose port (Azure App Service uses PORT env var)
EXPOSE 8000

# Health check with tighter timings for production
HEALTHCHECK --interval=30s --timeout=3s --start-period=20s --retries=3 \
  CMD curl -f http://localhost:${PORT}/health || exit 1

# Production command with performance optimizations
# Using exec form for proper signal handling (required for Azure App Service SIGTERM)
# Single worker process for Azure App Service (horizontal scaling handled by platform)
CMD ["uvicorn", "app.main:app", \
     "--host", "0.0.0.0", \
     "--port", "8000", \
     "--workers", "1", \
     "--loop", "uvloop", \
     "--access-log"]
